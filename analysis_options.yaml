# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # =================== FORMATTING / STYLE ===================
    lines_longer_than_80_chars: false
    prefer_single_quotes: true
    
    # =================== PERFORMANCE / CORRECTNESS ===================
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_is_not_empty: true
    prefer_is_empty: true
    
    # Inmutabilidad (crítico para Value Objects y Domain Entities)
    prefer_final_in_for_each: true     # 🏗️ Variables inmutables en loops
    prefer_final_parameters: true      # 🏗️ Parámetros inmutables por defecto
    
    # Prevenir dependencias incorrectas entre capas
    avoid_classes_with_only_static_members: false  # Permitir Utils temporalmente
    one_member_abstracts: false         # ✅ Permitir interfaces de un método (DDD ports)
    
    # Principio de Responsabilidad Única (SRP)
    avoid_catches_without_on_clauses: true    # 🎯 Catch específico por responsabilidad
    avoid_catching_errors: true              # 🎯 No catch genérico de Error
    
    # =================== DRY (DON'T REPEAT YOURSELF) ===================
    # Eliminar duplicación de código
    avoid_redundant_argument_values: true
    avoid_unnecessary_containers: true     # 🔄 Evitar Widgets redundantes
    prefer_collection_literals: true       # 🔄 Literals directos vs constructores
    prefer_if_null_operators: true         # 🔄 ?? operator vs if/else
    prefer_null_aware_operators: true      # 🔄 ?. operator vs null checks
    prefer_spread_collections: true        # 🔄 Spread operator vs addAll()
    
    # Constructores y inicialización DRY
    sort_constructors_first: true          # 📋 Organización consistente
    prefer_initializing_formals: true      # 🔄 this.field vs field = field
    
    # =================== SAFETY / BEST PRACTICES ===================
    avoid_print: true  # 🔒 Prohibir print() - usar logging apropiado
    cancel_subscriptions: true           # 🔒 Evitar memory leaks
    use_build_context_synchronously: true # 🔒 BuildContext seguro
    close_sinks: true                    # 🔒 Cerrar Streams/Sinks
    
    # Null safety y manejo de errores
    avoid_null_checks_in_equality_operators: true  # 🔒 == operators seguros
    avoid_returning_null_for_void: true           # 🔒 void methods consistentes
    avoid_slow_async_io: true                     # ⚡ I/O performance
    
    # =================== CODE QUALITY ===================
    # Prevenir code smells
    avoid_empty_else: true               # 🧹 else vacíos son code smell
    avoid_void_async: true               # 🧹 async void problemático
    
    # Consistencia y legibilidad
    curly_braces_in_flow_control_structures: true  # 📖 Always use braces
    prefer_contains: true                          # 📖 .contains() vs indexOf >= 0
    prefer_for_elements_to_map_fromIterable: true  # 📖 For loops vs Map.fromIterable
    prefer_function_declarations_over_variables: true  # 📖 Function declarations
    prefer_if_elements_to_conditional_expressions: true  # 📖 Collection if
    prefer_inlined_adds: true                          # 📖 Inline adds vs separate
    
    # =================== FLUTTER SPECIFIC ===================
    use_key_in_widget_constructors: true        # 🎨 Widget keys para performance
    sized_box_for_whitespace: true              # 🎨 SizedBox vs Container vacío
    avoid_web_libraries_in_flutter: true        # 🎨 No dart:html en Flutter
    prefer_const_constructors_in_immutables: true  # 🎨 Const constructors en @immutable
    
    # =================== DOCUMENTATION ===================
    public_member_api_docs: false  # 📚 Desactivado - demasiados archivos internos exportados
    
    # =================== EXPERIMENTAL / ADVANCED ===================
    # Estas reglas están comentadas porque pueden ser muy estrictas para comenzar
    # prefer_relative_imports: true       # 📁 Imports relativos vs package:
    # avoid_dynamic_calls: true           # 🔒 Evitar dynamic (muy estricto)
    # require_trailing_commas: true       # 📋 Trailing commas (opinionated)
    # sort_pub_dependencies: true         # 📋 Organizar pubspec.yaml

analyzer:
  errors:
    # ACTIVAR DETECCIÓN AUTOMÁTICA DE CÓDIGO NO USADO ⚡
    unused_element: warning      # 🧹 Métodos, clases no usados
    unused_field: warning        # 🧹 Campos de clase no usados  
    unused_import: warning       # 🧹 Imports no usados
    unused_local_variable: info  # 🧹 Variables locales no usadas (info level)
    
    avoid_catches_without_on_clauses: warning  # 🎯 Catch específico
    avoid_slow_async_io: warning               # ⚡ I/O performance
    prefer_final_parameters: info              # 🏗️ Inmutabilidad en parámetros
    prefer_final_in_for_each: info             # 🏗️ Inmutabilidad en loops
    
  exclude:
    - '**/*.g.dart'
    - 'build/**'
    - '.dart_tool/**'
    - 'coverage/**'

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options